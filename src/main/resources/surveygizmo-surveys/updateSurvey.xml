<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="updateSurvey" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="surveyId" description="Id of the survey which needs to be updated."/>
    <parameter name="title" description="The survey title."/>
    <parameter name="status"
               description="The survey status. (Launched, Closed, Deleted)."/>
    <parameter name="theme" description="The id of survey theme."/>
    <parameter name="team" description="The id of survey team."/>
    <parameter name="options" description="The internal title of the survey."/>
    <parameter name="blockBy"
               description="The Duplicate protection type (IP, COOKIE, null)"/>
    <parameter name="copy"
               description="Flag to create new survey using same setting. Default value is false."/>
    <parameter name="pollOptions"
               description="The option values for survey polls as json array."/>
    <parameter name="pollType"
               description="The poll type of survey poll (radio, image, ranking)."/>
    <sequence>
        <property name="uri.var.surveyId" expression="$func:surveyId"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.theme" expression="$func:theme"/>
        <property name="uri.var.team" expression="$func:team"/>
        <property name="uri.var.options" expression="$func:options"/>
        <property name="uri.var.blockBy" expression="$func:blockBy"/>
        <property name="uri.var.copy" expression="$func:copy"/>
        <property name="uri.var.pollOptions" expression="$func:pollOptions"/>
        <property name="uri.var.pollType" expression="$func:pollType"/>
        <property name="uri.var.optionsURL" value=""/>
        <script language="js">
            <![CDATA[
                    var title = mc.getProperty("uri.var.title");
                    var copy = mc.getProperty("uri.var.copy");
                    var theme = mc.getProperty("uri.var.theme");
                    var status = mc.getProperty("uri.var.status");
                    var team = mc.getProperty("uri.var.team");
                    var options = mc.getProperty("uri.var.options");
                    var blockBy = mc.getProperty("uri.var.blockBy");
                    var pollOptions = mc.getProperty("uri.var.pollOptions");
                    var pollType = mc.getProperty("uri.var.pollType");
                    var query = '';
                    if (options != null && options != ""){
                        query = query.concat('options[internal_title]=' + options);
                    }
                    var	payload = {};
                    if (title != null && title != ""){
                        payload ["title"] = title;
                    }
                    if (copy != null && copy != ""){
                        payload ["copy"] = copy;
                    }
                    if (status != null && status != ""){
                        payload ["status"] = status;
                    }
                    if (theme != null && theme != ""){
                        payload ["theme"] = theme;
                    }
                    if (team != null && team != ""){
                        payload ["team"] = team;
                    }
                    if (blockBy != null && blockBy != ""){
                        payload ["blockby"] = blockBy;
                    }
                    if (pollType != null && pollType != ""){
                        payload ["polltype"] = pollType;
                    }
                    if (pollOptions != null && pollOptions != ""){
                        pollOptions = eval("("+pollOptions+")");
                        var optionsParam = '';
                        for(var i=0; i < pollOptions.length; i++){
                            optionsParam += 'polloptions['+ i +']='+ pollOptions[i] + '&';
                        }
                        if(optionsParam != ""){
                            query = query.concat(optionsParam);
                        }
                    }
                    mc.setProperty('uri.var.optionsURL', query);
                    mc.setPayloadJSON(payload);
                    ]]>
        </script>
        <property name="messageType" value="application/json"
                  scope="axis2"/>
        <property name="FORCE_POST_PUT_NOBODY" value="true" scope="axis2"
                  type="BOOLEAN"/>
        <filter source="$ctx:surveygizmoBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/survey/{uri.var.surveyId}/{+uri.var.authParam}{+uri.var.optionsURL}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="post"
                              uri-template="{uri.var.apiUrl}/survey/{uri.var.surveyId}/{+uri.var.authParam}{+uri.var.optionsURL}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>
